
/*
// In JS, for setting the --button-size.
document.documentElement.style.setProperty('--button-size', `${buttonWidth}px`);
document.documentElement.style.setProperty('--button-size', `${buttonHeight}px`);
*/

:root {
    --button-size: 40pt; /* Default button size */
    --grid-row-size: 40pt; /* Default grid row size */
    --button-size-large: 45pt; /* Button size for large displays */
    --grid-gap: .5vmin; /* Gap between grid items */
    
}

.minikeylettersquare {
    font-family: 'Draughtsman A', sans-serif !important;
    width: var(--button-size); /* You can use CSS variables for dynamic width */
    height: calc(var(--button-size) / 4.2); /* Use CSS variables for dynamic height */
    position: absolute;
    bottom: 0; /* Align to bottom */
    right: 0; /* Align to right */
    background-color: rgba(200, 200, 200, 0.0); /* Semi-transparent grey */
    display: flex;
    text-transform: uppercase;
    align-items: center;
    color: rgba(255, 255, 255, 0.8);
    justify-content: right;
    z-index: 100;
    font-size: 90%;
    text-shadow: 0 0 3px #ccc; /* White text shadow */
    font-style: italic;
    text-align: right;
    margin-right: 2pt;
}


#keyboardKeysGrid,
#numberRowGrid {
    transition: transform 0.2s ease-in-out;
    /* Adjust the timing as needed */

}

#keyboardKeysGrid.slide-up
{
margin-bottom:-1px;
}



#keyboardPanel {
    position: absolute;
    z-index: 100;
    /* High z-index to keep it on top */
    pointer-events: none;
    text-shadow: 0.1vh 0.1vh #fff;

    position: absolute;


    bottom: 7pt;
    overflow: hidden;

    position: absolute;
    


    
}

.centered
{
    left: 50%;
    transform: translate(-50%, 0);
}






#keyboardKeysGrid {
    display: grid;
    grid-template-columns: repeat(15, var(--button-size));
    grid-template-rows: repeat(4, var(--button-size));
    gap: var(--grid-gap);



    background-color: rgba(128, 128, 128, 0.408);

    grid-auto-flow: row;
    grid-template-areas:


        "tabKey tabKey KeyQ wKey eKey rKey tKey yKey uKey iKey oKey pKey bracketLeftKey bracketRightKey backslashKey"

        "capsLockKey capsLockKey KeyA sKey dKey fKey gKey hKey jKey kKey lKey semicolonKey singleQuoteKey returnKey returnKey"

        "shiftKeyLeft shiftKeyLeft zKey xKey cKey vKey bKey nKey mKey commaKey periodKey forwardSlashKey shiftKeyRight shiftKeyRight ."

        "controlLeft altLeft metaLeft . spacebarKey spacebarKey spacebarKey spacebarKey spacebarKey spacebarKey spacebarKey metaRight altRight controlRight .";

    width: 100%;
    height: 100%;

    align-content: end;

}

#keyboardKeysGrid.bottomRowHidden button.bottomRowKey {
    display: none;
}

#keyboardKeysGrid.bottomRowHidden {

    grid-template-columns: repeat(15, var(--button-size));
    grid-template-rows: repeat(3, var(--button-size));
    gap: .5vmin .5vmin;
    grid-auto-flow: row;
    grid-template-areas:


        "tabKey tabKey KeyQ wKey eKey rKey tKey yKey uKey iKey oKey pKey bracketLeftKey bracketRightKey backslashKey"

        "capsLockKey capsLockKey KeyA sKey dKey fKey gKey hKey jKey kKey lKey semicolonKey singleQuoteKey returnKey returnKey"

        "shiftKeyLeft shiftKeyLeft zKey xKey cKey vKey bKey nKey mKey commaKey periodKey forwardSlashKey shiftKeyRight shiftKeyRight .";


    width: 100%;
    height: 100%;


    align-content: end;

}

#numberRowGrid {

    


    background-color: rgba(128, 128, 128, 0.408);


    display: grid;
    grid-template-columns: repeat(15, var(--button-size));
    grid-template-rows: repeat(1, var(--button-size));
    gap: .5vmin .5vmin;
    grid-auto-flow: row;
    grid-template-areas:
        "backquoteKey Digit1 twoKey threeKey fourKey fiveKey sixKey sevenKey eightKey nineKey zeroKey minusKey equalsKey deleteKey deleteKey";
    width: 100%;
    height: 100%;

    padding:3pt;

}


#numberRowKeyboardPanel {
    position: absolute;
    top: 5pt;
    z-index: 100;


    overflow: hidden;

    position: absolute;
    

}


