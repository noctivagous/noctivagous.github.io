/* Base page and layout styles */
:root {
  --crosshair-cursor: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='25' height='25'><line x1='7.5' y1='0' x2='7.5' y2='25' stroke='black' stroke-width='2'/><line x1='0' y1='7.5' x2='25' y2='7.5' stroke='black' stroke-width='2'/></svg>") 7 7, crosshair;
}

:root {
  --hover-outline: #88a9f0;
  --hover-menu-bg: #0f21e653;
  --selection-color:#bdf982;
}

.hoveredText{
color:var(--hover-outline);
}

:host {
  cursor: var(--crosshair-cursor) !important;
}

body, codeDocument {
  cursor: var(--crosshair-cursor);
}

html, body, * {
  cursor: var(--crosshair-cursor) !important;
}

body {
  font-family: monospace;
  margin: 10pt;
  background-color: #f7f7f7;
  color: #333;
}

codeproject {
  display: block;
  width: 100vw;
  min-height: 100vh;
  height: 100vh;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  background: transparent; /* Let bgPatterns handle background if needed */
}

/* Base display for custom XML-based code tags */
codeDocument,
functiongroup,
function,
class,
method,
name,
documentation,
parameters,
parameter,
return-type,
codeBody,
loop,
initialization,
condition,
increment,
variable,
statement,
constructors,
return {
  display: block;
  margin: 0;
  /*0.5em 0;*/


}

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}



codeDocument {
  cursor: var(--crosshair-cursor);
  display: block;
  max-width: 1500px;
  margin: auto;
  margin-left:0;
  /* Fill the available height */

  overflow-y: auto;
  /* Enable vertical scrolling */
  overflow-x: hidden;
  /* Prevent horizontal scrolling */
  column-count: 2;
  column-gap: 40px;
  column-rule: 4px solid gray;
  background-color: #969696;
  padding: 10pt;
  border: 1pt solid black;
}

expression {
  display: inline-block;
  vertical-align: middle;
}

role {
font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}
rolesymbol{

}
roletype {

}

statement {
  border-top: 1pt solid white;
  border: 0pt solid #000000;
  /* border-bottom: 1pt solid gray; */
  background-color: #330bc4;
  padding: 8pt;
  display: inline-block;
  margin-bottom: 10pt;
  box-shadow: 2pt 2pt 1pt #000000;
  margin-right:10pt;
}

statement name {
  font-family: monospace;
  font-size: 11pt;
}

type,
name {
  display: inline-block;

}

typename {
  display: none;
}

constructors {
  padding: 0pt;
  margin-bottom: 10pt;
  
  display: block;
  background-color: gray;
}

/* Instead, use a class for constructor functions: */
.function-constructor {
  background: #1e3a8a !important; /* blue-900 */
}

/* Ensure return and its children are aligned horizontally */
return {
  display: flex;
  align-items: center;
  /* Vertically align items */
  gap: 5px;
  /* Add spacing between items if needed */

}

return>name {
  display: inline-block;
  background-color: #330bc4;
  padding: 3pt;
  border: 2pt dashed orange;
  color: red;

}

return>expression {
  display: inline-block;
}

functiongroup {
  border: 4pt solid black;
  padding: 10pt;
  padding-left: 10pt;
  margin: 4pt;
  margin-left: 0;
  margin-bottom: 15pt;
  
  background-color: #727272;
  box-shadow: 8px 8px 6px rgb(34, 34, 34);
  border-radius: 20pt;
}

functiongroup:hover {
  background-color: #969696;
}

function:hover > name{ 

}

documentation {
  display: none;
  font-style: italic;
  color: #555;
}

typeSymbol {
  display: inline-block;
  background-color: #bbb;
  padding: 2pt;
  border-radius: 2pt;
}

parameter>typeSymbol {
  display: inline-block;

  font-family: monospace;
  background-color: #bbb;
  color: white;
  padding: 2px 4px;
  border-radius: 3px;
  margin-right: 0px;
  border: 2px solid gray;

}

variable>type>typeSymbol {

  font-family: monospace;
  background-color: #bbb;
  color: white;
  padding: 2px 4px;
  border-radius: 3px;
  margin-right: 2px;
}

typeSymbol>type {
  display: none;
}

typeSymbol>typeName {}

/* --- Return Type --- */
function > name > return-type {
  font-family: monospace;
  color: #990000;
  padding: 2px;
  background-color: #efefef;
  border-radius: 0px;
  display: inline-block;
  margin-top: 1px;
  width: 14pt;
  text-align: center;
  font-size: 12pt;
  border-radius: 4pt;

}

/* --- Function Element Styling --- */
function {
  break-inside: avoid;
  border: 4pt solid black;
  margin-bottom: 15pt;
  border-radius: 5pt;
  overflow: hidden;
  box-shadow: 8px 8px 6px rgb(34, 34, 34);
  background: rgb(152, 99, 0);

}

function>name {}

function:hover {
  background: rgb(216, 178, 107);

}



/* Place parameters box above function name */
function>parameters,
method>parameters {
  margin-bottom: 1px;
  background-color: black;

  padding: 3pt;
  padding-bottom: 6pt;
  border-bottom: 2pt solid white;
}

/* --- Parameters and Variable Type Symbols --- */
/* Each parameter now has a <typeSymbol> to show the leading symbol. */
parameter {
  display: inline-block;
  margin-right: 15px;
  background-color: #aaaaaa;
  padding: 0pt;
  border: 2pt solid rgb(51, 51, 51);
  border-radius: 4pt;
  position: relative;
}

parameter:not(:last-child)::after {
  content: '•';
  /* The dot separator */
  position: absolute;
  right: -11px;
  /* Adjust spacing */
  top: 50%;
  transform: translateY(-50%);
  color: rgb(130, 110, 241);
  /* Adjust color as needed */
  font-size: 12pt;
  /* Adjust size as needed */
}

function>typeSymbol,
method>typeSymbol {
  color: #994f00;
}

functionCall>typeSymbol {
  color: #1b0d00;
  padding: 1pt;
  font-size: 15pt;
  background-color: rgb(232, 110, 3);
border-radius:5pt;
padding-right:2pt;
padding-left:2pt;

}

functionCall>parameters:empty {
  padding: 5pt;
  height: 10pt;
}

typeSymbol {
min-width:10pt;
min-height:10pt;
text-align: center;
font-style: italic;

}


parameter>type {


  font-family: monospace;
  color: #990000;
  background-color: transparent;
}


parameter>name {
  display: inline-block;

  font-family: monospace;
  color: #c0c0c0;
  background-color: #4b4b4b;
  color: #9e9e9e;

  margin-left: -6px;
  border: 1px solid rgb(20, 20, 20);
  padding-left:2pt;
  padding-right:2pt;
  margin-right:2pt;
}

parameter>type>typeName {
  display: none;
}


/* Function name styling and function symbol */
function>name {
  font-family:  monospace;
  text-decoration: underline;
   font-weight: bold; 
  font-size: 13pt;

  color: #e9ad5f;
  color:black;
  
  padding: 2pt;
  position: relative;
  text-shadow: 2px 2px 4px rgb(93 47 9);
  transform: skewX(-10deg);
}

function>name:hover {
  color: #ffdcaf;
}


/* 'ℱ' */
function>name::before {
  content: 'ƒ';
  background-color: #4a3207;
  color: #96650f;
  padding: 2px 6px;
  border-radius: 9px;
  text-decoration: none;
  margin-right: 8pt;
  font-weight:normal;
}


/* --- Function Body --- */
function>codeBody,
method>codeBody {
  display: block;

  background-color: #005599;

  border-top: 4pt solid #000000;
  /*   
      border:5px solid blue;
      border-top:5pt solid blue;
*/
  background-color: blue;

  background-color: #3737c1;
  color: white;
  padding: 4pt;
  padding-top: 8pt;
  margin: 0;
}

function.collapsed>codeBody {
  display: none;
}

function.expanded>codeBody {
  display: block;

  border: 1px solid #ccc;
  border-radius: 10pt;
  background-color: rgb(249, 218, 160);
  padding: 10px;


}

/* --- Class and Methods --- */
class {
  border: 1px solid #a8a8a8;
  padding: 0px;
  margin-bottom: 20px;
  break-inside: avoid;
  border-radius: 17pt;
  box-shadow: inset 4px 4px 5px rgba(0, 0, 0, 0.6), inset -4px -4px 8px rgba(255, 255, 255, 0.5);
  padding: 10pt;
}

group {
  position: relative;
  /* Needed to position the pseudo-element relative to the group */
}

group::after {
  content: "GROUP";
  position: absolute;
  top: 5px;
  right: 20px;
  font-size: 12pt;
  font-weight:bold;
  color: rgba(0, 0, 0, .4);
  /* Light and subtle */
  pointer-events: none;
  /* So it doesn't interfere with clicks */
  z-index: 3;
  /* Places it in the background */
}


class > name {
  margin-bottom: 8pt;
  display: block;
  font-size: 18pt;
  color: #fff;
  font-weight: bold;
  padding-bottom: 4pt;
  background-color: #000;
  border-top-left-radius: 17pt;
  border-top-right-radius: 17pt;
  padding-left: 10pt;
  color: White;
  padding-top: 5pt;
  font-size: 14pt;
  border-bottom: 2pt solid #363636;
  margin-left: -10pt;
  margin-right: -10pt;
  margin-top: -10pt;
  border-top:3pt solid rgb(97, 97, 97);
  border-right:3pt solid rgb(182, 182, 182);
  border-left:3pt solid rgb(68, 68, 68);
  box-shadow: 0px 4px 6px black;
}

.moving-animate {
  transition: transform 0.25s cubic-bezier(.4,1.1,.6,1), box-shadow 0.25s;
  z-index: 10;
  box-shadow: 0 4px 16px #ffe082;
}

class > name::before {
  content: 'ℂ ';
  color:silver;
}

class > name > classExtendsName::before {
  content: ' : ';
}



class > codebody > constructors > function {
  display: block;
  padding: 2pt;
  padding-top: 5pt;
  background-color: rgb(96, 148, 148);

}

function[functionRole="constructor"] > role {
  display:block;
  background: #210246 !important; /* blue-900 */
  padding-bottom:4pt;
}


function[functionRole="constructor"] > role {
  color:white;
}






/* --- Standalone Variable Declaration --- */
variable,
functionCall parameter {
  display: inline-block;
  margin: 0px 0;
  font-family: monospace;

  color: white;
  background-color: #000;
  /*padding: 3pt;*/
  border-radius: 4pt;
}

variable{
  margin-bottom:10pt;
}

variable>documentation {
  display: none;
}

variable>name {

  display: inline-block;
  font-family: monospace;
  color: #005599;
  background-color: #aaa;
  padding-right:5pt;
  padding-left:5pt;
  color:black;
}

variable>type {
  display: inline-block;
}



/* --- Loop Styling --- */
loop {
  border: 1px dashed #aaa;
  padding: 5px;
  margin: 10px 0;
}

/* --- Interactivity --- */
/* Clicking on a function or method name toggles the display of their bodies */
function > name {
/*  cursor: pointer;*/
display: block;
}

/* Ensure functionCall and its children are aligned horizontally */
functionCall {
  display: flex;
  align-items: center;
  background-color: rgb(213 172 96);
  border-top-right-radius: 5pt;
  border-bottom-right-radius: 5pt;
  border-top-left-radius: 5pt;
  border-bottom-left-radius: 5pt;
  padding-left: 5pt;
  padding-right: 2pt;
  box-shadow: 2px 0px 2px white;
  border: 3pt solid rgb(0, 0, 0);
}


functionCall>name {
  background-color: rgb(213, 172, 96);
  display: inline-block;
  padding: 4pt;

  margin: 0;
  color: black;
}


functionCall>parameters {
  display: inline-block;
  border-left: 4pt solid #0f0909;
  padding: 2pt;
  border-radius: 10pt;
  border-right: 4pt solid #0f0909;
  padding-right: 4pt;
  padding-left: 4pt;
  background-color: #3a2773;
}

guiArea {
  display: grid;
  grid-template-columns: repeat(4, 56px);
  grid-auto-rows: 56px;
  gap: 8px;
  background: #222;
  padding: 20px;
  border-radius: 16px;
  box-shadow: 0 4px 24px #0008;
  justify-content: center;
  width: max-content;
  
}

guiArea button {
  font-family: monospace;
  font-size: 22px;
  border: none;
  border-radius: 5px;
  background: #444;
  color: #fff;
  box-shadow: 0 2px 4px #0006;
  /*cursor: pointer;*/
  transition: background 0.15s, transform 0.1s;
  width: 100%;
  height: 100%;
  outline: none;
  display: flex;
  align-items: center;
  justify-content: center;

}

guiArea button:hover {
  background: #ffb300;
  color: #222;
  transform: scale(1.07);
}

guiArea button[aria-label="clear"] {
  grid-column: span 4;
  background: #b71c1c;
  color: #fff;
  font-weight: bold;
}

kbd {
  border: 1pt solid white;
  background-color: silver;
  padding: 2pt;
  border-radius: 2pt;
  color: black;
  height: 10pt;
  display: inline-block;
  text-align: center;
}

/* Styling for the tab container and individual tabs */
.tab-container {
  display: flex;
  border-bottom: 3pt solid #000000;

padding-top:4pt;

margin-bottom:-3pt;
padding-left:0pt;
overflow: hidden;
}

.tab {
  margin-right: 5pt;
  padding: 2pt 6pt;
  
  background-color: #2f2c28;

  border-bottom: none;
  border-top-left-radius: 5pt;
  border-top-right-radius: 5pt;

  border-top: 3pt solid rgb(151, 151, 151);
  border-left: 3pt solid gray;
  border-right: 3pt solid silver;
  border: 3pt solid rgba(19, 19, 19, 0.965);
  border-bottom: 0;
  color:rgb(113, 83, 19);
  box-shadow: 8px 8px 6px rgb(34, 34, 34);
}



.tab.active {
  background-color: #583e0f;
  font-weight: bold;
  color: #ffefe0;
  font-style: oblique;
  border-top: 3pt solid rgb(114, 114, 114);
  border-left: 3pt solid rgb(93, 93, 93);
  border-right: 3pt solid rgb(142, 142, 142);
  border: 3pt solid #000;
  border-bottom: 0;
  margin-bottom:-2pt;
}

.function-container {
  padding-top: 2pt;

  transition: height 0.3s ease;
  /* Smooth height adjustment */
}

.selected {
  
  /*
  outline: 5pt solid #60fa63;
  outline-style: dashed;*/
  background: #333 !important;
  filter: brightness(100%);
  box-shadow: 3px 3px 3px 6pt #60fa63;
}

.hovered:not(.selected) {
  box-shadow: 3px 3px 3px 6pt #323932;
  outline: 5pt solid var(--hover-outline) !important;
  
}


/* For elements that are both selected and hovered */
.selected.hovered {
  outline: 3pt solid var(--hover-outline); /* Green outline for selected */
  
}

.visibilityArrow {
  position: absolute;
  right: 5pt;
  top: 0;
  transform: translateY(-50%) rotate(90deg); /* default: down */
  width: 25px;
  height: 25px;
  transition: transform 0.2s;
  cursor: pointer;
  pointer-events: auto;
}


.moving-element {
  transition: transform 0.2s ease-in-out;
  z-index: 1;
  position: relative;
}

.key-command-header {
  font-size: 18px;
  margin-bottom: 8px;
  color: #ffe082;
}

#key-command-menu {
  position: fixed;
  right: 24px;
  top: 125px; /* 200px less than the bottom of the viewport */
  background: #222;
  color: #fff;
  border-radius: 12px;
  box-shadow: 0 4px 24px #0008;
  padding: 18px 24px;
  font-family: monospace;
  font-size: 16px;
  z-index: 10000;
  min-width: 300px;
  opacity: 0.95;
  min-height:200pt;
}

#selection-info-menu {
  position: fixed;
  top: 520px; /* Move it below the hover menu */

  right: 24px;
  background: rgba(34, 34, 34, 0.7);
  color: var(--selection-color);
  border-radius: 12px;
  box-shadow: 0 4px 24px #0008;
  padding: 18px 24px;
  font-family: monospace;
  font-size: 16px;
  z-index: 10001; /* Above key-command-menu if overlapping */
  min-width: 300px;
  opacity: 0.95;
  background-color: rgba(121, 153, 73, 0.579);
}
.selection-info-header {
  font-size: 18px;
  margin-bottom: 8px;
  color: #4d9108;
  font-weight: bold;
}

#hover-info-menu {
  position: fixed;
  top: 24px;
  right: 24px;
  background: rgba(40, 40, 40, 0.5); /* Only background is semi-transparent */
background: var(--hover-menu-bg);
  color: var(--hover-outline);
  border-radius: 12px;
  box-shadow: 0 4px 24px #0008;
  padding: 14px 22px;
  font-family: monospace;
  font-size: 16px;
  z-index: 10002;
  min-width: 305px;
  opacity: 0.98;
  margin-bottom: 12px;
  min-height: 40pt;
  
  display:block;
  
}

#hover-info-tag{
color:var(--hover-outline);
font-size:16pt;
font-weight: bold;
text-shadow: 0px 1px 2px white;
background-color:#000;
display:inline-block;
padding:2pt;
border-radius:5pt;
}

#hover-info-name
{
  background-color:#1a1a1a;
  display: inline-block;
  padding:5pt;
  border-radius: 5pt;
  margin-top:2pt;
}

#hover-info-selected{
color:var(--selection-color);
}

.hover-info-header {
  font-size: 18px;
  margin-bottom: 8px;
  color: #2e98e9;
  font-weight: bold;
  min-width: 300px;

}

.mac-trail-outline {
  border: 2px solid #fff;
  box-shadow: 0 0 0 2px #000;
  border-radius: 4px;
  pointer-events: none;
  position: absolute;
  opacity: 0.8;
  transition: top 200ms cubic-bezier(.4,1.6,.6,1), left 200ms cubic-bezier(.4,1.6,.6,1), opacity 200ms linear;
}


#project-tabs {
  display: flex;
  gap: 8pt;
  margin-bottom:0pt;
  background-color: gray;
  position: sticky;
  margin:0;
  padding:0;
  margin-bottom:5pt;
}
.project-tab {
  font-family: monospace;
  font-size: 11pt;
  padding: 3pt 24pt;
  border: none;
  border-radius: 4pt 4pt 0 0;
  
  color: #fff;
  cursor: pointer;
  outline: none;
  

  background: #986300;
  color: #ffe082;
  border: 3pt solid #9a770e;
  font-weight: bold;
  border-bottom:0;
}
.project-tab.active {
  border: 3pt solid #222;
  background: #000;
  transition: background 0.15s;
  border-bottom:0;
}

#output-viewport{
  width:500pt; height:600pt; background:#222; color:#fff; border-radius:12pt; box-shadow:0 4px 24px #0008; display:flex; align-items:center; justify-content:center; font-size:18pt;
  margin:auto;
}

/* Insert menu styling */
#insert-menu {
  animation: fadeInInsertMenu 0.18s;
}
@keyframes fadeInInsertMenu {
  from { opacity: 0; transform: translateY(10px);}
  to { opacity: 1; transform: none;}
}
#insert-menu .insert-menu-item:hover {
  background: #444;
  color: #fff;
  border-radius: 4px;
}

#bracket-drag-line {
  pointer-events: none;
}

/* Flexbox container for the project */
#project-container {
  display: flex;
  height: 100vh; /* Full viewport height */
  overflow: hidden;
}

/* Document browser on the left */
#document-browser {
  width: 200px;
  background-color: #3333335c;
  color: white;
  padding: 10px;
  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.2);
  overflow-y: auto;
}

#document-tabs {
  list-style: none;
  padding: 0;
  margin: 0;
}

#document-tabs li {
  margin-bottom: 15px;
}

#document-tabs button {
  width: 100%;
  padding: 8px;
  background-color: #b8b7b7;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  text-align: left;
  border-radius: 5pt;
  
}

#document-tabs button:hover {
  background-color: #555;
}

#document-tabs button.active {
  background-color: #6a6a6a;
  outline:5pt solid #bababa;
  
  
}

#document-tabs button{
color:black;
}
#document-tabs button h3{
  margin:0;
  margin-bottom:3pt;
  
}

#document-tabs button.active {
color:#333;
}
#document-tabs button.active h3{
  color:rgb(228, 226, 226);
  margin:0;
  margin-bottom:3pt;
  

}

/* Code document container */
#code-document-container {
  flex-grow: 1; /* Take up remaining horizontal space */
  overflow-y: auto;
  padding: 10px;
}

/* Hide inactive code documents */
codeDocument.hidden {
  display: none;
}

codeDocument.active {
  display: block;
}

#project-title {
  width: 100%;
  background-color: #4444445a;
  color: #fff;
  text-align: left;
 box-sizing: border-box;
  padding: 0px;
  font-size: 14px;
  font-weight: bold;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  margin-bottom: 10pt;
  display:block;
}