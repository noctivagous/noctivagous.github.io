/* Base page and layout styles */
body {
  font-family: monospace;
  margin: 10pt;
  background-color: #f7f7f7;
  color: #333;
}

/* Base display for custom XML-based code tags */
codeDocument,
group,
function,
class,
method,
name,
documentation,
parameters,
parameter,
return-type,
codeBody,
loop,
initialization,
condition,
increment,
variable,
statement,
constructors,
return {
  display: block;
  margin: 0;
  /*0.5em 0;*/


}

html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
}



codeDocument {
  cursor: crosshair;
  display: block;
  max-width: 1400px;
  margin: auto;
  height: 100%;
  /* Fill the available height */

  overflow-y: auto;
  /* Enable vertical scrolling */
  overflow-x: hidden;
  /* Prevent horizontal scrolling */
  column-count: 2;
  column-gap: 40px;
  column-rule: 4px solid gray;
  background-color: #969696;
  padding: 10pt;
  border: 1pt solid black;
}

expression {
  display: inline-block
}

role {
font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}
rolesymbol{

}
roletype {

}

statement {
  border-top: 1pt solid white;
  border: 1pt solid #000000;
  /* border-bottom: 1pt solid gray; */
  background-color: #330bc4;
  padding: 4pt;
  display: inline-block;
  margin-bottom: 10pt;
  box-shadow: 2pt 2pt 1pt #000000;
}

statement name {
  font-family: monospace;
  font-size: 11pt;
}

type,
name {
  display: inline-block;

}

typename {
  display: none;
}

constructors {
  padding: 0pt;
  margin-bottom: 10pt;
  
  display: block;
  background-color: gray;
}

/* Instead, use a class for constructor functions: */
.function-constructor {
  background: #1e3a8a !important; /* blue-900 */
}

/* Ensure return and its children are aligned horizontally */
return {
  display: flex;
  align-items: center;
  /* Vertically align items */
  gap: 5px;
  /* Add spacing between items if needed */

}

return>name {
  display: inline-block;
  background-color: #330bc4;
  padding: 3pt;
  border: 2pt dashed orange;
  color: red;

}

return>expression {
  display: inline-block;
}

group {
  border: 2pt dotted black;
  padding: 10pt;
  padding-left: 10pt;
  margin: 4pt;
  margin-left: 0;
  margin-bottom: 15pt;
  background-color: #676767;
  box-shadow: 8px 8px 6px rgb(34, 34, 34);
  border-radius: 5pt;
}


documentation {
  display: none;
  font-style: italic;
  color: #555;
}

typeSymbol {
  display: inline-block;
  background-color: #bbb;
  padding: 2pt;
  border-radius: 2pt;
}

parameter>typeSymbol {
  display: inline-block;

  font-family: monospace;
  background-color: #bbb;
  color: white;
  padding: 2px 4px;
  border-radius: 3px;
  margin-right: 0px;
  border: 2px solid gray;

}

variable>type>typeSymbol {

  font-family: monospace;
  background-color: #bbb;
  color: white;
  padding: 2px 4px;
  border-radius: 3px;
  margin-right: 2px;
}

typeSymbol>type {
  display: none;
}

typeSymbol>typeName {}

/* --- Return Type --- */
return-type {
  font-family: monospace;
  color: #990000;
  padding: 2px;
  background-color: #efefef;
  border-radius: 0px;
  display: inline-block;
  margin-top: 1px;
  width: 14pt;
  text-align: center;
  font-size: 12pt;

}

/* --- Function Element Styling --- */
function {
  break-inside: avoid;
  border: 4pt solid black;
  margin-bottom: 15pt;
  border-radius: 5pt;
  overflow: hidden;
  box-shadow: 5px 5px 6px rgb(77, 77, 77);
  background: rgb(152, 99, 0);

}

function>name {}

function:hover {
  background: rgb(216, 178, 107);

}



/* Place parameters box above function name */
function>parameters,
method>parameters {
  margin-bottom: 1px;
  background-color: black;

  padding: 0pt;
  padding-bottom: 4pt;
  border-bottom: 2pt solid white;
}

/* --- Parameters and Variable Type Symbols --- */
/* Each parameter now has a <typeSymbol> to show the leading symbol. */
parameter {
  display: inline-block;
  margin-right: 15px;
  background-color: #aaaaaa;
  padding: 0pt;
  border: 2pt solid rgb(51, 51, 51);
  border-radius: 4pt;
  position: relative;
}

parameter:not(:last-child)::after {
  content: '•';
  /* The dot separator */
  position: absolute;
  right: -11px;
  /* Adjust spacing */
  top: 50%;
  transform: translateY(-50%);
  color: rgb(130, 110, 241);
  /* Adjust color as needed */
  font-size: 12pt;
  /* Adjust size as needed */
}

function>typeSymbol,
method>typeSymbol {
  color: #994f00;
}

functionCall>typeSymbol {
  color: #994a00;
  padding: 1pt;
  font-size: 15pt;
  background-color: rgb(232, 110, 3);


}

functionCall>parameters:empty {
  padding: 5pt;
  height: 10pt;
}



parameter>type {


  font-family: monospace;
  color: #990000;
  background-color: transparent;
}


parameter>name {
  display: inline-block;

  font-family: monospace;
  color: #c0c0c0;
  background-color: #4b4b4b;
  color: #9e9e9e;

  margin-left: -6px;
  border: 1px solid rgb(20, 20, 20);
}

parameter>type>typeName {
  display: none;
}


/* Function name styling and function symbol */
function>name {
  font-family: Lekton, monospace;
  text-decoration: underline;
  /* font-weight: bold; */
  font-size: 15pt;

  color: #e9ad5f;
  padding: 2pt;
  position: relative;
  text-shadow: 2px 2px 4px rgb(93 47 9);
  transform: skewX(-10deg);
}

function>name:hover {
  color: #845920;
}



function>name::before {
  content: 'ℱ';
  background-color: orange;
  color: #640000;
  padding: 2px 6px;
  border-radius: 3px;
  margin-right: 4px;
}


/* --- Function Body --- */
function>codeBody,
method>codeBody {
  display: block;

  background-color: #005599;

  border-top: 4pt solid #000000;
  /*   
      border:5px solid blue;
      border-top:5pt solid blue;
*/
  background-color: blue;

  background-color: #3737c1;
  color: white;
  padding: 4pt;
  padding-top: 8pt;
  margin: 0;
}

function.collapsed>codeBody {
  display: none;
}

function.expanded>codeBody {
  display: block;

  border: 1px solid #ccc;
  border-radius: 10pt;
  background-color: rgb(249, 218, 160);
  padding: 10px;


}

/* --- Class and Methods --- */
class {
  border: 1px solid #a8a8a8;
  padding: 0px;
  margin-bottom: 20px;
  break-inside: avoid;
  border-radius: 20pt;
  box-shadow: inset 4px 4px 5px rgba(0, 0, 0, 0.6), inset -4px -4px 8px rgba(255, 255, 255, 0.5);
  padding: 10pt;
}

group {
  position: relative;
  /* Needed to position the pseudo-element relative to the group */
}

group::after {
  content: "GROUP";
  position: absolute;
  top: 5px;
  right: 5px;
  font-size: 18px;
  color: rgba(0, 0, 0, .4);
  /* Light and subtle */
  pointer-events: none;
  /* So it doesn't interfere with clicks */
  z-index: 3;
  /* Places it in the background */
}



class  > name {
  margin-bottom: 5pt;
  display: block;
  font-size: 18pt;
  color: #fff;
  font-weight: bold;
  padding-bottom: 5px;
background-color: #000;

  border-top-left-radius: 15pt;
  border-top-right-radius: 15pt;
  padding-left: 10pt;
  color:White;
  padding-top: 5pt;
  font-size: 14pt;
  border-bottom: 1pt solid white;
}

class > name::before {
  content: 'ℂ ';
  color:silver;
}

class > name > classExtendsName::before {
  content: ' : ';
}



class > codebody > constructors > function {
  display: block;
  padding: 2pt;
  padding-top: 5pt;
  background-color: rgb(96, 148, 148);

}

function[functionRole="constructor"] > role {
  display:block;
  background: #210246 !important; /* blue-900 */
  padding-bottom:4pt;
}


function[functionRole="constructor"] > role {
  color:white;
}






/* --- Standalone Variable Declaration --- */
variable,
functionCall parameter {
  display: inline-block;
  margin: 0px 0;
  font-family: monospace;

  color: white;
  background-color: #000;
  padding: 3pt;
  border-radius: 4pt;
}

variable{
  margin-bottom:10pt;
}

variable>documentation {
  display: none;
}

variable>name {

  display: inline-block;
  font-family: monospace;
  color: #005599;
  background-color: #aaa;
}

variable>type {
  display: inline-block;
}



/* --- Loop Styling --- */
loop {
  border: 1px dashed #aaa;
  padding: 5px;
  margin: 10px 0;
}

/* --- Interactivity --- */
/* Clicking on a function or method name toggles the display of their bodies */
function > name {
  cursor: pointer;
}

/* Ensure functionCall and its children are aligned horizontally */
functionCall {
  display: flex;
  align-items: center;
  background-color: rgb(213 172 96);
  border-top-right-radius: 5pt;
  border-bottom-right-radius: 5pt;
  border-top-left-radius: 5pt;
  border-bottom-left-radius: 5pt;
  padding-left: 5pt;
  padding-right: 2pt;
  box-shadow: 2px 0px 2px white;
  border: 1pt solid white;
}


functionCall>name {
  background-color: rgb(213, 172, 96);
  display: inline-block;
  padding: 4pt;

  margin: 0;
  color: black;
}


functionCall>parameters {
  display: inline-block;
  border-left: 4pt solid #0f0909;
  padding: 2pt;
  border-radius: 10pt;
  border-right: 4pt solid #0f0909;
  padding-right: 4pt;
  padding-left: 4pt;
  background-color: #3a2773;
}

guiArea {
  display: grid;
  grid-template-columns: repeat(4, 56px);
  grid-auto-rows: 56px;
  gap: 8px;
  background: #222;
  padding: 20px;
  border-radius: 16px;
  box-shadow: 0 4px 24px #0008;
  justify-content: center;
  width: max-content;
  
}

guiArea button {
  font-family: monospace;
  font-size: 22px;
  border: none;
  border-radius: 5px;
  background: #444;
  color: #fff;
  box-shadow: 0 2px 4px #0006;
  cursor: pointer;
  transition: background 0.15s, transform 0.1s;
  width: 100%;
  height: 100%;
  outline: none;
  display: flex;
  align-items: center;
  justify-content: center;

}

guiArea button:hover {
  background: #ffb300;
  color: #222;
  transform: scale(1.07);
}

guiArea button[aria-label="clear"] {
  grid-column: span 4;
  background: #b71c1c;
  color: #fff;
  font-weight: bold;
}

kbd {
  border: 1pt solid white;
  background-color: silver;
  padding: 2pt;
  border-radius: 2pt;
  color: black;
  height: 10pt;
  display: inline-block;
  text-align: center;
}

/* Styling for the tab container and individual tabs */
.tab-container {
  display: flex;
  border-bottom: 3pt solid #000000;

}

.tab {
  margin-right: 5pt;
  padding: 2pt 6pt;
  cursor: pointer;
  background-color: #ba9248;

  border-bottom: none;
  border-top-left-radius: 5pt;
  border-top-right-radius: 5pt;

  border-top: 3pt solid rgb(151, 151, 151);
  border-left: 3pt solid gray;
  border-right: 3pt solid silver;
  border: 3pt solid darkgray;
  border-bottom: 0;
}

.tab.active {
  background-color: #986300;
  font-weight: bold;
  color: #e4831f;
  font-style: oblique;
  border-top: 3pt solid rgb(114, 114, 114);
  border-left: 3pt solid rgb(93, 93, 93);
  border-right: 3pt solid rgb(142, 142, 142);
  border: 3pt solid #444;
  border-bottom: 0;
}

.function-container {
  padding-top: 2pt;

  transition: height 0.3s ease;
  /* Smooth height adjustment */
}

.selected {
  outline: 3pt solid #60fa63;
  background: #333 !important;
}

.hovered:not(.selected) {
  outline: 4pt solid #2196f3 !important;
}

/* For elements that are both selected and hovered */
.selected.hovered {
  outline: 3pt solid #60fa63; /* Green outline for selected */
  box-shadow: 0 0 0 6pt #2196f3; /* Blue outline for hovered */
}

.moving-element {
  transition: transform 0.2s ease-in-out;
  z-index: 1;
  position: relative;
}

.key-command-header {
  font-size: 18px;
  margin-bottom: 8px;
  color: #ffe082;
}

#key-command-menu {
  position: fixed;
  right: 24px;
  top: 115px; /* 200px less than the bottom of the viewport */
  background: #222;
  color: #fff;
  border-radius: 12px;
  box-shadow: 0 4px 24px #0008;
  padding: 18px 24px;
  font-family: monospace;
  font-size: 16px;
  z-index: 10000;
  min-width: 300px;
  opacity: 0.95;
  min-height:200pt;
}

#selection-info-menu {
  position: fixed;
  bottom: 20px; /* Move it below the hover menu */

  right: 24px;
  background: rgba(34, 34, 34, 0.7);
  color: #bdf982;
  border-radius: 12px;
  box-shadow: 0 4px 24px #0008;
  padding: 18px 24px;
  font-family: monospace;
  font-size: 16px;
  z-index: 10001; /* Above key-command-menu if overlapping */
  min-width: 300px;
  opacity: 0.95;
}
.selection-info-header {
  font-size: 18px;
  margin-bottom: 8px;
  color: #4d9108;
  font-weight: bold;
}

#hover-info-menu {
  position: fixed;
  top: 24px;
  right: 24px;
  background: rgba(40, 40, 40, 0.5); /* Only background is semi-transparent */

  color: #22c0fe;
  border-radius: 12px;
  box-shadow: 0 4px 24px #0008;
  padding: 14px 22px;
  font-family: monospace;
  font-size: 16px;
  z-index: 10002;
  min-width: 305px;
  opacity: 0.98;
  margin-bottom: 12px;
  min-height: 40pt;
  
  display:block;
}

#hover-info-tag{
color:#0155af;
font-weight: bold;
}

#hover-info-selected{
color:greenyellow;
}

.hover-info-header {
  font-size: 18px;
  margin-bottom: 8px;
  color: #108ceb;
  font-weight: bold;
  min-width: 300px;

}

.mac-trail-outline {
  border: 2px solid #fff;
  box-shadow: 0 0 0 2px #000;
  border-radius: 4px;
  pointer-events: none;
  position: absolute;
  opacity: 0.8;
  transition: top 200ms cubic-bezier(.4,1.6,.6,1), left 200ms cubic-bezier(.4,1.6,.6,1), opacity 200ms linear;
}
