Moving Past iOS

iOS has a major drawback: the simplest tasks are easy to achieve but anything slightly complicated has to be memorized.  A user can easily activate one of iOS's many side features on accident and this is a poor state of UI. But actually, iOS is an undeveloped and prototype-level set of user interface conventions.  Because it strives towards minimalism, it is nubby, dumbed down, and evokes feelings of interacting with playground equipment.  For controlling software, it insists on doing without complementary physical controls like knobs, sliders, or buttons.  Steve Jobs just knew what mattered at the time-- to put together a tablet UI that actually worked for the hands, and he brought in the multitouch technologies that had recently been introduced by researchers.  This can sell a lot of devices because anyone from the public can use what iOS provides.  But making a device blunt in its simplicity comes at a steep cost, because eventually the apps that people want to use and make are more complicated and there is no scheme available for them.  iOS is ideologically narrow.  It doesn’t possess anything to accommodate complex usage of a computer, so now there are trackpads and keyboard sold for these tablets, to turn them into PCs.  The theory of the PC was developed over a period of years by Douglas Engelbart and Xerox PARC, so a tablet's return to the PC isn't a surprise.  The theory behind iOS mostly a set of bare conveniences to accommodate the multitouch “gestures,” to launch apps and press buttons inside them.  

"Easy to use" shouldn't be equated with "no effort needed to understand it at all," so there has to be a more complex scheme set up for the future


Touch Modifier Buttons

An object sits there on the screen, but what does touching it mean?  The answer is vague, but generally "open" or "insert text".  But, for example, if modifier buttons were placed on the left edge of the screen in a column, they could specify what a touch means when it is pressed.  Closing a window would not involve pressing the close button, but instead momentarily holding down the "close" modifier button and then touching the window, panel, or object.  When a certain modifier key is held down, e.g. this “close” modifier, whatever object the finger touches will be closed or deleted.  That is to say, five objects can be removed from a page quickly by holding down this modifier, tapping each one, and then letting off the modifier key. This will then allow the user to control the purpose of a touch in real time before making a press.  Of course, if there are several touch modifier keys, they can accommodate a wide range of purposes.  A “generate” modifier will generate an object at the position of a touch in an empty space or as a child object of the touched object on the screen.

NOCTIVAGOUS.GITHUB.IO